.\"
.\" Copyright (c) 2023 Roman Žilka <roman.zilka@gmail.com>
.\" Copyright (c) 2009-2024 Craig Small <csmall@dropbear.xyz>
.\" Copyright (c) 2018-2023 Jim Warner <james.warner@comcast.net>
.\" Copyright (c) 2011-2012 Sami Kerola <kerolasa@iki.fi>
.\" Copyright (c) 2003      Albert Cahalan
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH WATCH 1 "19. Juli 2024" procps\-ng 
.SH BEZEICHNUNG
watch \- ein Programm periodisch ausführen, die Ausgabe im Vollbildmodus
anzeigen
.SH ÜBERSICHT
\fBwatch\fP [\fIOption\fP .\|.\|.\&] \fIBefehl\fP
.SH BESCHREIBUNG
\fBwatch\fP führt den \fIBefehl\fP wiederholt aus, wobei dessen Ausgabe und Fehler
angezeigt werden (der erste Bildschirminhalt). Dies ermöglicht Ihnen die
Überwachung der Änderungen der Programmausgaben über längere
Zeit. Standardmäßig wird der \fIBefehl\fP alle zwei Sekunden ausgeführt und
\fBwatch\fP läuft, bis es unterbrochen wird. Eine Kopfzeile informiert über die
Start\- und verstrichene Zeit des \fIBefehls\fP sowie über dessen Exit\-Code.
.SH OPTIONEN
.TP 
\fB\-b\fP, \fB\-\-beep\fP
lässt die Systemglocke ertönen, falls ein \fIBefehl\fP sich mit einem von Null
verschiedenen Rückgabewert beendet.
.TP 
\fB\-c\fP, \fB\-\-color\fP
interpretiert ANSI\-Farb\- und \-Stilsequenzen.
.TP 
\fB\-C\fP, \fB\-\-no\-color\fP
interpretiert keine ANSI\-Farb\- und \-Stilsequenzen.
.TP 
\fB\-d\fP, \fB\-\-differences\fP[=\fIpermanent\fP]
hebt die Unterschiede zwischen aufeinander folgenden Aktualisierungen
hervor. Falls das optionale Argument \fIpermanent\fP angegeben ist, dann zeigt
\fBwatch\fP alles, was sich seit dem ersten Durchlauf mindestens einmal
geändert hat.
.TP 
\fB\-e\fP, \fB\-\-errexit\fP
unterbricht die Aktualisierungen nach einem Fehler des \fIBefehls\fP und
beendet nach einem Tastendruck. Der Exit\-Code von \fBwatch\fP ist der des
\fIBefehls\fP, mit dem es beendet wird. Falls das Signal \fBn\fP Ursache der
Beendigung des \fIBefehls\fP ist, dann wird der Exit\-Code 128 + \fBn\fP sein.
.TP 
\fB\-g\fP, \fB\-\-chgexit\fP
beendet, sobald die sich die visuelle Ausgabe des \fIBefehls\fP
ändert. Änderungen, die aufgrund eines zu kleinen Bildschirms oder einer zu
großen Ausgabe nicht sichtbar sind, werden hierbei von \fBwatch\fP nicht
erfasst und führen nicht zum Beenden.
.TP 
\fB\-n\fP, \fB\-\-interval\fP \fISekunden\fP
gibt das Aktualisierungsintervall an. Werte kleiner als 0.1 und größer als
2678400 (31 Tage) werden in die entsprechenden Grenzen umgewandelt. In allen
Locales funktionieren sowohl »,« als auch ».«. Mit der Umgebungsvariable
\fBWATCH_INTERVAL\fP können Sie ein Nicht\-Standard\-Intervall dauerhaft setzen
(den gleichen Regeln und der gleichen Formatierung folgend).
.TP 
\fB\-p\fP, \fB\-\-precise\fP
führt den \fIBefehl\fP im durch \fB\-\-interval\fP angegebenen Intervall in Sekunden
aus, nachdem der vorherige Durchlauf gestartet ist, anstelle  in Sekunden,
nachdem der vorherige Durchlauf beendet wurde. Falls die Ausführung des
\fIBefehls\fP mehr als die angegebenen Sekunden benötigt, wird in jedem Fall
darauf gewartet.
.TP 
\fB\-q\fP, \fB\-\-equexit\fP <Durchläufe>
beendet, wenn sich die Ausgabe des \fIBefehls\fP über die angegebene Anzahl
durchläufe nicht ändert.
.TP 
\fB\-r\fP, \fB\-\-no\-rerun\fP
führt das Programm bei Änderungen der Terminalgröße nicht erneut aus; die
Ausgabe des Programms erscheint wieder zum nächsten regulären
Ausführungszeitpunkt.
.TP 
\fB\-s\fP, \fB\-\-shotsdir\fP
gibt das Verzeichnis an, in welchem Bildschirmaufnahmen gespeichert werden
sollen.
.TP 
\fB\-t\fP, \fB\-\-no\-title\fP
unterdrückt die Anzeige der Kopfzeile, die normalerweise am oberen Rand des
Bildschirms angezeigt wird.
.TP 
\fB\-w\fP, \fB\-\-no\-wrap\fP
deaktiviert den Zeilenumbruch. Lange Zeilen werden gekürzt, anstatt sie in
die nächste Zeile umzubrechen.
.TP 
\fB\-x\fP, \fB\-\-exec\fP
übergibt den \fIBefehl\fP den \fBexec\fP(3)\-Aufruf anstatt \fBsh \-c\fP. Das Programm
startet ein wenig schneller. Shell\-Funktionsmerkmale (Einrichtung der
Umgebung, Variablen\- und Pfadnamenexpansion usw.) werden nicht verfügbar
sein.
.TP 
\fB\-h\fP, \fB\-\-help\fP
zeigt einen Hilfetext an und beendet das Programm.
.TP 
\fB\-v\fP, \fB\-\-version\fP
zeigt Versionsinformationen an und beendet das Programm.
.SH TASTATURSTEUERUNG
.TP 
\fBLeertaste\fP
führt den \fIBefehl\fP direkt aus. Falls die Befehlsausführung bereits läuft,
wird diese nicht unterbrochen und dessen nächste Runde ohne Verzögerung
gestartet.
.TP 
\fBq\fP
beendet \fBwatch\fP. Derzeit unterbricht es nicht die  Ausführung eines
laufenden \fIBefehls\fP (im Gegensatz zu terminierenden Signalen, wie SIGKILL,
das durch Strg+C ausgelöst wird).
.TP 
\fBs\fP
nimmt ein Bildschirmfoto auf. Es wird im aktuellen Verzeichnis gespeichert;
wahlweise kann das Verzeichnis mit \fB\-\-shotsdir\fP angegeben werden. Falls der
\fIBefehl\fP momentan ausgeführt wird, dann wird das Bildschirmfoto
aufgenommen, sobald er beendet ist.
.SH EXIT\-STATUS
.TP 
\fB0\fP
Erfolg. Repräsentiert nicht den Exit\-Code des \fIBefehls\fP.
.TP 
\fB1\fP
Fehler, die sich nicht auf die Ausführung des \fIBefehls\fP beziehen.
.TP 
\fB2\fP
Auf die Ausführung und das Management des \fIBefehls\fP bezogene Fehler (nicht
dessen Exit\-Code).
.TP 
\fBalles von 0 verschiedene (\-\-errexit)\fP
Mit \fB\-\-errexit\fP wird der letzte Exit\-Code des \fIBefehls\fP zurückgegeben.
.SH UMGEBUNGSVARIABLEN
Das Verhalten von \fBwatch\fP wird durch die folgenden Umgebungsvariablen
beeinflusst.
.TP 
\fBWATCH_INTERVAL\fP
Aktualisierungsintervall, welches den gleichen Regeln wie die
Befehlszeilenoption \fB\-\-interval\fP folgt.
.TP 
\fBCOLUMNS\fP
Zeichenbreite des Terminalbildschirms. Wird verwendet, um die automatische
Erkennung außer Kraft zu setzen.
.TP 
\fBLINES\fP
Zeichenhöhe des Terminalbildschirms. Wird verwendet, um die automatische
Erkennung außer Kraft zu setzen.
.SH ANMERKUNGEN
Die Optionen werden gemäß POSIX verarbeitet (das heißt, die
Optionsverarbeitung stoppt nach dem ersten Argument, das keine Option
ist). Das bedeutet, dass Schalter nach dem \fIBefehl\fP nicht von \fBwatch\fP
selbst interpretiert werden.
.P
Nicht darstellbare Zeichen werden aus der Programmausgabe
entfernt. Verwenden Sie \fBcat \-v\fP als Teil der Befehls\-Pipeline, wenn Sie
diese sehen wollen.
.SH BEISPIELE
.PP
Den Inhalt eines Verzeichnisses auf Änderungen überwachen:
.IP
watch \-d ls \-l
.PP
Falls Ihr Rechner über Prozessoren mit dynamischer Frequenzanpassung verfügt
und Sie die Änderungen überwachen wollen, könnten Sie dies mit folgendem
Befehl tun. Der Befehl wird an die Shell übergeben, wodurch Sie eine Pipe
erzeugen können. Die Zitatzeichen sind ein Funktionsmerkmal der Shell.
.IP
watch \-n1 'grep "^cpu MHz" /proc/cpuinfo | sort \-nrk4'
.PP
Um den Status Ihrer Server zu überwachen und dabei eine Kopie der Ausgabe
jedes Durchlaufs in einer Datei zu speichern, könnten Sie dies
verwenden. Mit der Option \fB\-p\fP wird der Befehl alle 10 Sekunden ausgeführt,
unabhängig davon, wie viel Zeit für den vorherigen Durchlauf benötigt wurde.
.IP
watch \-n10 \-p \-d '{ date; for i in 10.0.0.31 10.0.0.32 10.0.0.33; do R=OK;
ping \-c2 \-W2 "$i" &>/dev/null || R=FAIL; echo "$i: $R"; done } | tee \-a
~/log'
.PP
Beobachten, wenn Ihr Administrator den neuesten Kernel installiert:
.IP
watch uname \-r
.SH FEHLER
Wenn sich die Dimensionen des Terminals ändern, werden dessen
Inhaltsänderungen für den nächsten Durchlauf des \fIBefehls\fP nicht
berücksichtigt. \fB\-\-chgexit\fP löst diesen Durchlauf nicht aus und der Zähler
von \fB\-\-equexit\fP startet nicht neu, selbst wenn sich die Ausgabe des
\fIBefehls\fP zwischenzeitlich geändert hat. Die Hervorhebung mit
\fB\-\-differences\fP wird zurückgesetzt.
.SH "FEHLER MELDEN"
Bitte schicken Sie Fehlermeldungen (auf Englisch) an
.MT procps@freelists.org
.ME .
